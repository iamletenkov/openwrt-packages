#!/bin/sh /etc/rc.common
# light-weight cloud-init for OpenWrt
START=36
STOP=10
USE_PROCD=1

# ──────────────────────────────────────────────────────────────────────────
CLOUD_TRIES="${cloud_tries:-30}"     # override UCI/kernel param cloud_tries=N
CLOUD_DELAY=1                        # seconds between metadata retries
CIDATA_DEV=/dev/sr0                  # where Proxmox/KVM attaches iso

# ---------- helpers -------------------------------------------------------
log()    { logger -t rc.cloud "$*"; }
trim()   { echo "$*" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'; }

parse_network_config() {        # → iface|proto|ip|mask|gw
	awk '
		function flush() { if (iface) printf "%s|%s|%s|%s|%s\n", iface, proto, ip, mask, gw }
		/^- +type: *physical/        { flush(); iface=proto=ip=mask=gw=""; next }
		/name:/                      { iface=$2 }
		/- +type: *static/           { proto="static" }
		/- +type: *dhcp4/            { proto="dhcp" }
		/address:/                   { ip=$2 }
		/netmask:/                   { mask=$2 }
		/gateway:/                   { gw=$2 }
		END { flush() }
	' "$1" | tr -d "\"'"
}

read_dns_search() {               # → DNS|search
	awk '
		BEGIN{dns=search=""}
		/-.*type: *nameserver/ {ns=1; next}
		ns && /address:/       {adr=1; next}
		ns && /search:/        {adr=0; srch=1; next}
		adr && /- +/           {gsub(/[^0-9.]/,""); dns=$0; adr=srch=ns=0}
		srch && /- +/          {gsub(/[^A-Za-z0-9_.-]/,""); search=$0; adr=srch=ns=0}
		END{print dns"|",search}
	' "$1"
}

# ---------- main ----------------------------------------------------------
start_service() {
	# 0. honour ds=nocloud
	if grep -Eq '(^| )ds=(nocloud|NoCloud)( |$)' /proc/cmdline ; then
		log "kernel arg ds=nocloud → skipping metadata probing"
	else
		log "metadata service probing not yet implemented (todo)"
	fi

	# 1. mount cidata (if any)
	mkdir -p /mnt/cidata
	if ! mount -o ro $CIDATA_DEV /mnt/cidata 2>/dev/null; then
		log "no cidata found on $CIDATA_DEV, nothing to apply"
		return 0
	fi
	log "cidata mounted"

	# ------------------------------------------------ user-data ------------
	if [ -f /mnt/cidata/user-data ]; then
		USERDATA=/mnt/cidata/user-data
		HOST=$(awk -F': *' '$1=="fqdn"{print $2;exit}' "$USERDATA" | tr -d '" ')
		HASH=$(awk -F': *' '$1=="password"{print $2;exit}' "$USERDATA" | tr -d '" ')

		[ -n "$HOST" ] && { uci set system.@system[0].hostname="$HOST"; uci commit system; \
		                    echo "$HOST" > /proc/sys/kernel/hostname; }
		if [ -n "$HASH" ]; then
			sed -i "s|^root:[^:]*:|root:${HASH}:|" /etc/shadow
			log "root password hash set from user-data"
		fi
	fi

	# ------------------------------------------------ network-config -------
	if [ -f /mnt/cidata/network-config ]; then
		NETCFG=/mnt/cidata/network-config

		# DNS / search
		IFS='|' read DNS SEARCH <<EOF
$(read_dns_search "$NETCFG")
EOF
		: > /etc/resolv.conf.head
		[ -n "$SEARCH" ] && echo "search $(trim "$SEARCH")" > /etc/resolv.conf.head
		[ -n "$DNS"    ] && echo "nameserver $(trim "$DNS")" >> /etc/resolv.conf.head
		cp /etc/resolv.conf.head /etc/resolv.conf

		# rebuild UCI network
		uci -q delete network.@device[0]
		uci -q delete network.lan

		IDX=0
		parse_network_config "$NETCFG" | while IFS='|' read IFACE PROTO IP NM GW; do
			NAME=$([ $IDX -eq 0 ] && echo wan || echo lan$IDX)

			uci set network.$NAME=interface
			uci set network.$NAME.device="$IFACE"
			uci set network.$NAME.proto="${PROTO:-dhcp}"
			[ "$PROTO" = "static" ] && {
				uci set network.$NAME.ipaddr="$IP"
				uci set network.$NAME.netmask="$NM"
				[ -n "$GW" ] && uci set network.$NAME.gateway="$GW"
			}
			if [ $IDX -eq 0 ] && [ -n "$DNS" ]; then
				uci set network.$NAME.peerdns='0'
				uci set network.$NAME.dns="$(trim "$DNS")"
			fi
			IDX=$((IDX+1))
		done
		uci commit network

		# simple DHCP on first LAN for convenience
		uci set dhcp.lan1='dhcp'
		uci set dhcp.lan1.interface='lan1'
		uci set dhcp.lan1.start='10'
		uci set dhcp.lan1.limit='150'
		uci set dhcp.lan1.leasetime='2m'
		uci commit dhcp

		uci set firewall.@zone[1].input='ACCEPT'
		uci set firewall.@zone[1].forward='ACCEPT'
		uci commit firewall
	fi

	# 3. apply & cleanup
	/etc/init.d/network restart
	umount /mnt/cidata && rmdir /mnt/cidata
	opkg update --no-check-certificate &
}

stop_service() { :; }
